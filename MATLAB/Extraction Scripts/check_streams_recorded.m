%Brain Embodiment Laboratory%
%University of Reading%

%-------------------------------------------------------------------------%

%BEL's Script to extract the streams recorded from a folder containing *.mcd files%

%The *.mcd format is property of http://www.multichannelsystems.com/%

%-------------------------------------------------------------------------%

%Written by Rodrigo Kazu%
%Any enquiries to r.siqueiradesouza@pgr.reading.ac.uk%

%-------------------------------------------------------------------------%

%This script uses functions from mcintfac that are no longer supported%

%First, it gets all the *.mcd files from your directory%

%Add your folder in both variables (folder_name and folder)%

%-------------------------------------------------------------------------%

folder_name = 'C:\Users\rodrigokazu\Dropbox\PhD\Thesis\Exps\Temporary stored data files for test analysis\DIVs\DIV14\7558\';

folder = dir('C:\Users\rodrigokazu\Dropbox\PhD\Thesis\Exps\Temporary stored data files for test analysis\DIVs\DIV14\7558\*.mcd'); % This extracts the *.mcd files from your folder

total_mcd_num = length(folder(not([folder.isdir]))); 

data_cell = cell(total_mcd_num,4); %Creates a cell to store the files and the information needed for the current analysis

%-------------------------------------------------------------------------%

%This step will iterate through your folder%

for mcs_data = 1:total_mcd_num  %Use this for all files in the folder%

    mcd_file = strcat(folder_name,folder(mcs_data,1).name); %This concatenate the two strings so you have the whole file name.
    
%datastrm is a data object constructor for data recorded with MC_Rack%

    data = datastrm(mcd_file);
    
    data_cell{mcs_data,1} = mcd_file; % It adds the file name to the cell
    data_cell{mcs_data,2} = data; % It adds the data object generated by datastrm() to the cell
    
    stream_names = getfield (data, 'StreamNames'); %It gets the streams from the file
    data_cell{mcs_data,3} = stream_names; %It adds the stream names to the cell

%-------------------------------------------------------------------------%

%nextdata reads data from an MCRack OLE Object opened with datastrm.m%

%It gets the electrode (channel) order right, check nextdata's help for details% 

%The streamname can be any of the streams present in the raw data%

%Also, gets the full record time in ms%

%-------------------------------------------------------------------------%

  % start = getfield(data,'sweepStartTime'); %Gets when the record started
  % finish = getfield(data,'sweepStopTime'); %And when it ended.

   
%Put the channel names in the recorded order into a Matrix%

%-------------------------------------------------------------------------%

 % streamID = getstreamnumber(data, 'Electrode Raw Data 1');
 % channel_names = getfield(data, 'HardwareChannelNames2');
 % channelID_matrix = channel_names{streamID};

%-------------------------------------------------------------------------%

%Converting to uV%

%-------------------------------------------------------------------------%

 %  for firingchannel = 1:60
                 
 %       u_data.spikevalues{firingchannel}=ad2muvolt(data,u_data.spikevalues{firingchannel},'Electrode Raw Data 1');
        
 %  end
  
%-------------------------------------------------------------------------%

%Exporting the Data to a *.mat file%

%-------------------------------------------------------------------------%

 %   spiketimes=u_data.spiketimes;
    
 %   spikevalues=u_data.spikevalues;
 
 %   file_name=strrep(file_name,'.mcd',''); %Removes de " .mcd "
 
 %   data_exported=strcat(folder_name,file_name); %This adds your file to the folder path
 
    


%Gets rid of the 'B'%

%-------------------------------------------------------------------------%

%channelID_matrix = strrep(channelID_matrix,'B',''); 

%-------------------------------------------------------------------------%

%Data type conversion, from string to numeric %

%-------------------------------------------------------------------------%

%channelID_matrix = str2mat(channelID_matrix);
%channelID_matrix = str2num(channelID_matrix);

%-------------------------------------------------------------------------%


end

%The commented session above is just a reminder of useful methods provided%

%This final bit saves the data cell to a *mat file%

file_name=strcat(folder_name,'_streams_inthisfolder'); %Names the exported file

save(file_name, 'data_cell');